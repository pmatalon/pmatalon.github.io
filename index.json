[{"authors":null,"categories":null,"content":"Development of fast solvers for statically condensed linear systems arising from Hybrid High-Order (HHO) discretizations.\n  Download CV.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Development of fast solvers for statically condensed linear systems arising from Hybrid High-Order (HHO) discretizations.\n  Download CV.","tags":null,"title":"Pierre Matalon","type":"authors"},{"authors":["D. A. Di Pietro","P. Matalon","P. Mycek","U. Rüde"],"categories":null,"content":"Reproduction of the numerical experiments The experiments can be reproduced through the open-source code fhhos4, release 1.0.\nIn the following command lines, the strategies are configured by the parameter -hp-config {1|2|3|4}:\n-hp-config 1 # h-only\r-hp-config 2 # p-h\r-hp-config 3 # p-h*\r-hp-config 4 # hp-h\r Section 3.4.1 (effect of basis normalization) Execute the following command to show that the multigrid method diverges when orthonormal bases are used with local refinement, even for low degree and small problem size:\n\u0026gt; fhhos4 -geo square4quadrants_tri_localref -no-cache -tc square -cs r -k 1 -n 32 -e-ogb 3\r The parameter -e-ogb 3 orthonormalizes the element bases. Replace it with -e-ogb 1 (orthogonalization without normalization) to make the multigrid method converge properly.\nNote that divergence occurs if the refinement ratio is \u0026gt;= 1e5. To see it, edit the file data/meshes/2D/square4quadrants_tri_localref.geo to play with the refinement ratio:\nh_center = h*1e-5; # divergence\rh_center = h*1e-4; # convergence\r It is interesting to see that normalization does not seem to affect the conditioning of the matrix, and that using a direct solver seems to work. Indeed, execute the following command and check the L2-error obtained after the system is solved by a Cholesky factorization.\n\u0026gt; fhhos4 -geo square4quadrants_tri_localref -no-cache -tc square -cs r -k 1 -n 256 -e-ogb 3 -s ch\r Replace the last parameters with -e-ogb 1 -s mg to check that you obtain the same L2-error using the multigrid and without normalization.\nFigure 3 (advantages of high-order, smooth solution) \u0026gt; fhhos4 -geo square -mesh cart -cs r -tol 1e-12 -s fcgmg -hp-config 2 -k 2 -n 1024\r\u0026gt; fhhos4 -geo square -mesh cart -cs r -tol 1e-12 -s fcgmg -hp-config 2 -k 3 -n 512\r\u0026gt; fhhos4 -geo square -mesh cart -cs r -tol 1e-12 -s fcgmg -hp-config 2 -k 4 -n 256\r\u0026gt; fhhos4 -geo square -mesh cart -cs r -tol 1e-12 -s fcgmg -hp-config 2 -k 5 -n 128\r Figure 5 (equivalent test, non-smooth solution) \u0026gt; fhhos4 -geo square4quadrants_tri_localref -tc kellogg -no-cache -cs r -s fcgmg -hp-config 1 -e-ogb 0 -f-ogb 0 -e-basis monomials -f-basis monomials -tol 1e-3 -k 1 -n 256\r\u0026gt; fhhos4 -geo square4quadrants_tri_localref -tc kellogg -no-cache -cs r -s fcgmg -hp-config 1 -e-ogb 0 -f-ogb 0 -e-basis monomials -f-basis monomials -tol 1e-3 -k 2 -n 128\r\u0026gt; fhhos4 -geo square4quadrants_tri_localref -tc kellogg -no-cache -cs r -s fcgmg -hp-config 1 -e-ogb 0 -f-ogb 0 -e-basis monomials -f-basis monomials -tol 1e-3 -k 3 -n 64 \u0026gt; fhhos4 -geo square4quadrants_tri_localref -tc kellogg -no-cache -cs r -s fcgmg -hp-config 1 -e-ogb 0 -f-ogb 0 -e-basis monomials -f-basis monomials -tol 1e-3 -k 4 -n 64 \u0026gt; fhhos4 -geo square4quadrants_tri_localref -tc kellogg -no-cache -cs r -s fcgmg -hp-config 1 -e-ogb 0 -f-ogb 0 -e-basis monomials -f-basis monomials -tol 1e-3 -k 5 -n 32  Figures 7 and 8 (square, Cart. mesh) Set -s mg for Fig. 6 and -s fcgmg for Fig. 7.\n\u0026gt; fhhos4 -geo square -mesh cart -cs r -k 5 -n 128 -tol 1e-12 -s {mg|fcgmg} -hp-config {1|2|3|4}\r Figure 9 and 10 (square, tri. mesh) Set -s mg for Fig. 8 and -s fcgmg for Fig. 9.\n\u0026gt; fhhos4 -geo square -cs r -k 5 -n 64 -tol 1e-12 -s {mg|fcgmg} -hp-config {1|2|3|4}\r Figure 11 and 12 (Kellogg) Set -s mg for Fig. 10 and -s fcgmg for Fig. 11.\n\u0026gt; fhhos4 -geo square4quadrants_tri_localref -tc kellogg -no-cache -cs r -k 5 -n 256 -tol 1e-12 -s {mg|fcgmg} -hp-config {1|2|3|4}\r Figure 13 and 14 (cube, Cart. mesh) Set -s mg for Fig. 12 and -s fcgmg for Fig. 13.\n\u0026gt; fhhos4 -geo cube -k 3 -n 64 -mesh cart -mesher inhouse -cs s -tol 1e-12 -s {mg|fcgmg} -hp-config {1|2|3|4}\r Figure 15 and 16 (cube, tet. mesh) Set -s mg for Fig. 14 and -s fcgmg for Fig. 15.\n\u0026gt; fhhos4 -geo cube -k 3 -n 32 -mesh stetra -mesher inhouse -cs s -tol 1e-12 -s {mg|fcgmg} -hp-config {1|2|3|4}\r Figure 17 and 18 (Geneva wheel) Set -s mg for Fig. 16 and -s fcgmg for Fig. 17.\n\u0026gt; fhhos4 -geo genevawheel.geo -tc default -k 2 -n 32 -cs m -tol 1e-12 -s {mg|fcgmg} -hp-config {1|2|3|4}\r ","date":1654041600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1654041600,"objectID":"8910837f8840ddcd0c0a134096401ad6","permalink":"https://pmatalon.github.io/publication/2021-high-order-strategies/","publishdate":"2021-11-01T00:00:00Z","relpermalink":"/publication/2021-high-order-strategies/","section":"publication","summary":"This study compares various high-order multigrid strategies for the fast solution of elliptic equations discretized by the Hybrid High-Order method. Combinations of *h*-, *p*- and *hp*-coarsening strategies are considered, coupled to diverse intergrid transfer operators. Comparisons are made experimentally on 2D and 3D test cases, with structured, unstructured and non-nested meshes. Advantages and drawbacks of each strategy are discussed for each experiment in an attempt to establish simplified guidelines for the optimization of the time to solution.","tags":[],"title":"High-order multigrid strategies for HHO discretizations of elliptic equations","type":"publication"},{"authors":["P. Matalon"],"categories":null,"content":"","date":1635724800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1635724800,"objectID":"5f3718e684baaba8087309280f8459d3","permalink":"https://pmatalon.github.io/publication/2021-phd-thesis/","publishdate":"2021-11-01T00:00:00Z","relpermalink":"/publication/2021-phd-thesis/","section":"publication","summary":"We consider a second-order, elliptic partial differential equation (PDE) discretized by the Hybrid High-Order (HHO) method. HHO is a polyhedral method that handles arbitrary polynomial orders, and for which globally coupled unknowns are located at faces. To efficiently solve the linear system arising after static condensation, this work proposes novel, skeleton-based multigrid methods. One is geometric, the other is algebraic. The geometric algorithm is an h-multigrid method that conserves the polynomial degree at every level. It handles non-nested, unstructured, polyhedral meshes. Numerical tests on homogeneous and heterogeneous diffusion problems show fast convergence, scalability in the mesh size and polynomial order, and robustness with respect to heterogeneity of the diffusion coefficient. The algebraic multigrid method (AMG) applies to the lowest order hybrid methods. It leverages the uncondensed matrix to extract the connectivity graph between elements and faces, and subsequently implements an element-defined aggregation-based coarsening strategy. Used as a preconditioner, this AMG conserves the performance and scalability of standard plain aggregation AMGs that directly work on the condensed system, while exhibiting notable improvement on anisotropic problems with Cartesian meshes.","tags":[],"title":"Fast solvers for robust discretizations in computational fluid dynamics","type":"publication"},{"authors":["D. A. Di Pietro","F. Hülsemann","P. Matalon","P. Mycek","U. Rüde"],"categories":null,"content":"Reproduction of the numerical experiments The experiments can be reproduced through the open-source code fhhos4, release 1.0.\nFigure 4.2 and Table 4.2 Execute the following command line\n\u0026gt; fhhos4 [[test_case]] [[solver]]\r where [[test_case]] corresponds to\n# Cube-cart\r-geo cube -mesh cart -mesher inhouse -k 0 -n 128\r# 'Cube-tet\r-geo cube -mesh tetra -k 0 -n 64\r# Complex-tet\r-geo platewith4holes -k 0 -n 16\r# Heterog1e8\r-geo square4quadrants -k 0 -n 2048 -heterog 1e8\r# Cube-cart-aniso100\r-geo cube -mesh cart -mesher inhouse -k 0 -n 128 -aniso 100\r# Cube-tet-aniso100\r-geo cube -mesh tetra -k 0 -n 64 -aniso 20\r and [[solver]] corresponds to\n# U-AMG\r-s fcguamg\r# C-AMG\r-s fcgaggregamg\r# AGMG\r-s agmg\r Figure 4.4 \u0026gt; fhhos4 -geo cube -mesh tetra -k 0 -n {16|32|64|128} [[solver]]\r Table 4.3 \u0026gt; fhhos4 -geo cube -mesh tetra -k 0 -n 64 -s fcguamg\r Table 4.4 Important parameter: -cs dpa.\n\u0026gt; fhhos4 -geo cube -mesh tetra -k 0 -n 64 -s fcguamg -cs dpa\r Table 4.5 # U-AMG (multiple coarsening)\r\u0026gt; fhhos4 -geo cube -mesh tetra -k 0 -n 64 -s fcguamg -cs mpa\r# U-AMG (double coarsening)\r\u0026gt; fhhos4 -geo cube -mesh tetra -k 0 -n 64 -s fcguamg -cs dpa\r# C-AMG\r\u0026gt; fhhos4 -geo cube -mesh tetra -k 0 -n 64 -s fcgaggregamg\r# AGMG\r\u0026gt; fhhos4 -geo cube -mesh tetra -k 0 -n 64 -s agmg\r Table 4.6 Important parameter: -coarsening-prolong {3|4|5|6}.\n# Cube-tet\r\u0026gt; fhhos4 -geo cube -mesh tetra -k 0 -n 64 -s fcguamg -coarsening-prolong 6\r\u0026gt; fhhos4 -geo cube -mesh tetra -k 0 -n 64 -s fcguamg -coarsening-prolong 4\r\u0026gt; fhhos4 -geo cube -mesh tetra -k 0 -n 64 -s fcguamg -coarsening-prolong 5\r\u0026gt; fhhos4 -geo cube -mesh tetra -k 0 -n 64 -s fcguamg -coarsening-prolong 3\r# Cube-cart-aniso100\r\u0026gt; fhhos4 -geo cube -mesh cart -mesher inhouse -k 0 -n 128 -aniso 100 -s fcguamg -coarsening-prolong 6\r\u0026gt; fhhos4 -geo cube -mesh cart -mesher inhouse -k 0 -n 128 -aniso 100 -s fcguamg -coarsening-prolong 4\r\u0026gt; fhhos4 -geo cube -mesh cart -mesher inhouse -k 0 -n 128 -aniso 100 -s fcguamg -coarsening-prolong 5\r\u0026gt; fhhos4 -geo cube -mesh cart -mesher inhouse -k 0 -n 128 -aniso 100 -s fcguamg -coarsening-prolong 3\r ","date":1622505600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1622505600,"objectID":"4f488d6a1871ae304c43eda318df8e75","permalink":"https://pmatalon.github.io/publication/2021-amg-for-hybrid-methods/","publishdate":"2021-06-01T00:00:00Z","relpermalink":"/publication/2021-amg-for-hybrid-methods/","section":"publication","summary":"We address the numerical solution of linear systems arising from the hybrid discretizations of second-order elliptic partial differential equations (PDEs). Such discretizations hinge on a hybrid set of degrees of freedom (DoFs), respectively defined in cells and faces, which naturally gives rise to a global *hybrid* system of linear equations. Assuming that the cell unknowns are only locally coupled, they can be efficiently eliminated from the system, leaving only face unknowns in the resulting Schur complement, also called *statically condensed* matrix. We propose in this work an algebraic multigrid (AMG) preconditioner specifically targeting condensed systems corresponding to lowest order discretizations (piecewise constant). Like traditional AMG methods, we retrieve geometric information on the coupling of the DoFs from algebraic data. However, as the condensed matrix only gives information on the faces, we use the *uncondensed* version to reconstruct the connectivity graph between elements and faces. An aggregation-based coarsening strategy mimicking a geometric coarsening or semi-coarsening can then be set up to build coarse levels. Numerical experiments are performed on diffusion problems discretized by the Hybrid High-Order (HHO) method at the lowest order. Our approach uses a K-cycle to precondition an outer flexible Krylov method. The results demonstrate similar performances, in most cases, compared to a standard AMG method, and a notable improvement on anisotropic problems with Cartesian meshes.","tags":[],"title":"Algebraic multigrid preconditioner for statically condensed systems arising from lowest-order hybrid discretizations","type":"publication"},{"authors":["D. A. Di Pietro","F. Hülsemann","P. Matalon","P. Mycek","U. Rüde","D. Ruiz"],"categories":null,"content":"","date":1619827200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1619827200,"objectID":"353396c1c2cc64cbeed620fc86ecf636","permalink":"https://pmatalon.github.io/publication/2021-non-nested-mg-for-hho/","publishdate":"2021-05-01T00:00:00Z","relpermalink":"/publication/2021-non-nested-mg-for-hho/","section":"publication","summary":"The use of modern discretization technologies such as Hybrid High-Order (HHO) methods, coupled with appropriate linear solvers, allow for the robust and fast solution of Partial Differential Equations (PDEs). Although efficient linear solvers have recently been made available for simpler cases, complex geometries remain a challenge for large scale problems. To address this problem, we propose in this work a geometric multigrid algorithm for unstructured non-nested meshes. The non-nestedness is handled in the prolongation operator through the use of the *L2*-orthogonal projection from the coarse elements onto the fine ones. However, as the exact evaluation of this projection can be computationally expensive, we develop a cheaper approximate implementation that globally preserves the approximation properties of the *L2*-orthogonal projection. Additionally, as the multigrid method requires not only the coarsening of the elements, but also that of the faces, we leverage the geometric flexibility of polytopal elements to define an abstract non-nested coarsening strategy based on element agglomeration and face collapsing. Finally, the multigrid method is tested on homogeneous and heterogeneous diffusion problems in two and three space dimensions. The solver exhibits near-perfect asymptotic optimality for moderate degrees of approximation.","tags":[],"title":"Towards robust, fast solutions of elliptic equations on complex domains through hybrid high‐order discretizations and non‐nested multigrid methods","type":"publication"},{"authors":["D. A. Di Pietro","F. Hülsemann","P. Matalon","P. Mycek","U. Rüde","D. Ruiz"],"categories":null,"content":"Reproduction of the numerical experiments The experiments can be reproduced through the open-source code fhhos4, release 1.0.\nFigure 4.1 # 2D cart\r\u0026gt; fhhos4 -geo square -mesh cart -mesher inhouse -s mg -cycle V,1,1 -k 0 -n {32|64|128|256|512|1024}\r\u0026gt; fhhos4 -geo square -mesh cart -mesher inhouse -s mg -cycle V,1,1 -k 1 -n {32|64|128|256|512|1024}\r\u0026gt; fhhos4 -geo square -mesh cart -mesher inhouse -s mg -cycle V,1,1 -k 2 -n {32|64|128|256|512|1024}\r\u0026gt; fhhos4 -geo square -mesh cart -mesher inhouse -s mg -cycle V,1,1 -k 3 -n {32|64|128|256|512|1024}\r# 2D tri\r\u0026gt; fhhos4 -geo square -mesh stri -mesher inhouse -s mg -cycle V,1,1 -k 0 -n {32|64|128|256|512|1024|2048}\r\u0026gt; fhhos4 -geo square -mesh stri -mesher inhouse -s mg -cycle V,1,1 -k 1 -n {32|64|128|256|512|1024}\r\u0026gt; fhhos4 -geo square -mesh stri -mesher inhouse -s mg -cycle V,1,1 -k 2 -n {32|64|128|256|512}\r\u0026gt; fhhos4 -geo square -mesh stri -mesher inhouse -s mg -cycle V,1,1 -k 3 -n {32|64|128|256|512}\r# 3D cart\r\u0026gt; fhhos4 -geo cube -mesh cart -mesher inhouse -s mg -cycle V,1,1 -k 0 -n {16|32|64|128}\r\u0026gt; fhhos4 -geo cube -mesh cart -mesher inhouse -s mg -cycle V,1,1 -k 1 -n {16|32|64|128}\r\u0026gt; fhhos4 -geo cube -mesh cart -mesher inhouse -s mg -cycle V,1,1 -k 2 -n {8|16|32|64}\r\u0026gt; fhhos4 -geo cube -mesh cart -mesher inhouse -s mg -cycle V,1,1 -k 3 -n {8|16|32|64}\r# 3D tetra\r\u0026gt; fhhos4 -geo cube -mesh stetra -mesher inhouse -s mg -cycle V,2,2 -k 0 -n 16 # diverging\r\u0026gt; fhhos4 -geo cube -mesh stetra -mesher inhouse -s mg -cycle V,2,2 -k 1 -n {8|16|32|64}\r\u0026gt; fhhos4 -geo cube -mesh stetra -mesher inhouse -s mg -cycle V,2,2 -k 2 -n {8|16|32}\r\u0026gt; fhhos4 -geo cube -mesh stetra -mesher inhouse -s mg -cycle V,2,2 -k 3 -n {8|16|32}\r Figure 4.2 Replace the * characters with numerical values in\n\u0026gt; fhhos4 -geo square -mesh stri -mesher inhouse -k 1 -n 512 -s mg -cycle V,*,*  Figure 4.3 Replace the * characters with numerical values in\n\u0026gt; fhhos4 -geo square -mesh stetra -mesher inhouse -k 1 -n 32 -s mg -cycle V,*,*  Figure 4.4 Important parameter: -smoothers bj23,bj23.\nReplace the * characters with numerical values in\n\u0026gt; fhhos4 -geo square -mesh stri -mesher inhouse -k 1 -n 512 -s mg -smoothers bj23,bj23 -cycle V,*,*  Figure 4.5 # 2D cart\r\u0026gt; fhhos4 -geo square -mesh cart -mesher inhouse -s mg -cycle V,0,3 -k 0 -n {32|64|128|256|512|1024}\r\u0026gt; fhhos4 -geo square -mesh cart -mesher inhouse -s mg -cycle V,0,3 -k 1 -n {32|64|128|256|512|1024}\r\u0026gt; fhhos4 -geo square -mesh cart -mesher inhouse -s mg -cycle V,0,3 -k 2 -n {32|64|128|256|512|1024}\r\u0026gt; fhhos4 -geo square -mesh cart -mesher inhouse -s mg -cycle V,0,3 -k 3 -n {32|64|128|256|512|1024}\r# 2D tri\r\u0026gt; fhhos4 -geo square -mesh stri -mesher inhouse -s mg -cycle V,0,3 -k 0 -n {32|64|128|256|512|1024|2048}\r\u0026gt; fhhos4 -geo square -mesh stri -mesher inhouse -s mg -cycle V,0,3 -k 1 -n {32|64|128|256|512|1024}\r\u0026gt; fhhos4 -geo square -mesh stri -mesher inhouse -s mg -cycle V,0,3 -k 2 -n {32|64|128|256|512}\r\u0026gt; fhhos4 -geo square -mesh stri -mesher inhouse -s mg -cycle V,0,3 -k 3 -n {32|64|128|256|512}\r# 3D cart\r\u0026gt; fhhos4 -geo cube -mesh cart -mesher inhouse -s mg -cycle V,0,6 -k 0 -n {16|32|64|128}\r\u0026gt; fhhos4 -geo cube -mesh cart -mesher inhouse -s mg -cycle V,0,6 -k 1 -n {16|32|64|128}\r\u0026gt; fhhos4 -geo cube -mesh cart -mesher inhouse -s mg -cycle V,0,6 -k 2 -n {8|16|32|64}\r\u0026gt; fhhos4 -geo cube -mesh cart -mesher inhouse -s mg -cycle V,0,6 -k 3 -n {8|16|32|64}\r# 3D tetra\r\u0026gt; fhhos4 -geo cube -mesh stetra -mesher inhouse -s mg -cycle V,0,6 -k 0 -n 16 # diverging\r\u0026gt; fhhos4 -geo cube -mesh stetra -mesher inhouse -s mg -cycle V,0,6 -k 1 -n {8|16|32|64}\r\u0026gt; fhhos4 -geo cube -mesh stetra -mesher inhouse -s mg -cycle V,0,6 -k 2 -n {8|16|32}\r\u0026gt; fhhos4 -geo cube -mesh stetra -mesher inhouse -s mg -cycle V,0,6 -k 3 -n {8|16|32}\r Figure 4.7 \u0026gt; fhhos4 -geo square4quadrants -tc kellogg -mesh cart -mesher inhouse -s mg -cycle V,1,1 -k 0 -n {32|64|128|256|512|1024}\r\u0026gt; fhhos4 -geo square4quadrants -tc kellogg -mesh cart -mesher inhouse -s mg -cycle V,1,1 -k 1 -n {32|64|128|256|512|1024}\r\u0026gt; fhhos4 -geo square4quadrants -tc kellogg -mesh cart -mesher inhouse -s mg -cycle V,1,1 -k 2 -n {32|64|128|256|512}\r\u0026gt; fhhos4 -geo square4quadrants -tc kellogg -mesh cart -mesher inhouse -s mg -cycle V,1,1 -k 3 -n {32|64|128|256|512}\r Figure 4.8 Important parameters: -prolong {1|2} [-disable-hor].\n(a) V(0,3) # cell k and injection\r\u0026gt; fhhos4 -geo square -mesh stri -mesher inhouse -k 1 -s mg -cycle V,0,3 -prolong 2 -disable-hor -n {32|64|128|256|512|1024}\r# cell k and average\r\u0026gt; fhhos4 -geo square -mesh stri -mesher inhouse -k 1 -s mg -cycle V,0,3 -prolong 1 -disable-hor -n {32|64|128|256|512|1024}\r# cell k+1 and injection\r\u0026gt; fhhos4 -geo square -mesh stri -mesher inhouse -k 1 -s mg -cycle V,0,3 -prolong 2 -n {32|64|128|256|512|1024}\r# cell k+1 and average (final algo)\r\u0026gt; fhhos4 -geo square -mesh stri -mesher inhouse -k 1 -s mg -cycle V,0,3 -prolong 1 -n {32|64|128|256|512|1024}\r (b) V(1,2) # cell k and injection\r\u0026gt; fhhos4 -geo square -mesh stri -mesher inhouse -k 1 -s mg -cycle V,1,2 -prolong 2 -disable-hor -n {32|64|128|256|512|1024}\r# cell k and average\r\u0026gt; fhhos4 -geo square -mesh stri -mesher inhouse -k 1 -s mg -cycle V,1,2 -prolong 1 -disable-hor -n {32|64|128|256|512|1024}\r# cell k+1 and injection\r\u0026gt; fhhos4 -geo square -mesh stri -mesher inhouse -k 1 -s mg -cycle V,1,2 -prolong 2 -n {32|64|128|256|512|1024}\r# cell k+1 and average (final algo)\r\u0026gt; fhhos4 -geo square -mesh stri -mesher inhouse -k 1 -s mg -cycle V,1,2 -prolong 1 -n {32|64|128|256|512|1024}\r Figure 4.9 Modify the value of the parameter -heterog from 1e0 to 1e8:\n(a) Heterogeneous weighting \u0026gt; fhhos4 -geo square4quadrants -mesh cart -mesher inhouse -n 64 -s mg -g 1 -cycle V,0,3 -k 0 -heterog {1e0-1e8}\r\u0026gt; fhhos4 -geo square4quadrants -mesh cart -mesher inhouse -n 64 -s mg -g 1 -cycle V,0,3 -k 1 -heterog {1e0-1e8}\r\u0026gt; fhhos4 -geo square4quadrants -mesh cart -mesher inhouse -n 64 -s mg -g 1 -cycle V,0,3 -k 2 -heterog {1e0-1e8}\r\u0026gt; fhhos4 -geo square4quadrants -mesh cart -mesher inhouse -n 64 -s mg -g 1 -cycle V,0,3 -k 3 -heterog {1e0-1e8}\r (b) Homogeneous weighting Important parameter: -disable-heterog-weight.\n\u0026gt; fhhos4 -geo square4quadrants -mesh cart -mesher inhouse -n 64 -s mg -g 1 -cycle V,0,3 -disable-heterog-weight -k 0 -heterog {1e0-1e8}\r\u0026gt; fhhos4 -geo square4quadrants -mesh cart -mesher inhouse -n 64 -s mg -g 1 -cycle V,0,3 -disable-heterog-weight -k 1 -heterog {1e0-1e8}\r\u0026gt; fhhos4 -geo square4quadrants -mesh cart -mesher inhouse -n 64 -s mg -g 1 -cycle V,0,3 -disable-heterog-weight -k 2 -heterog {1e0-1e8}\r\u0026gt; fhhos4 -geo square4quadrants -mesh cart -mesher inhouse -n 64 -s mg -g 1 -cycle V,0,3 -disable-heterog-weight -k 3 -heterog {1e0-1e8}\r Figure 4.10 Important parameter: -fcs {0|1}.\n(a) With face coarsening \u0026gt; fhhos4 -geo square -mesh cart -mesher inhouse -s mg -cycle V,0,3 -cs s -fcs 1 -k 0 -n {32|64|128|256|512}\r\u0026gt; fhhos4 -geo square -mesh cart -mesher inhouse -s mg -cycle V,0,3 -cs s -fcs 1 -k 1 -n {32|64|128|256|512}\r\u0026gt; fhhos4 -geo square -mesh cart -mesher inhouse -s mg -cycle V,0,3 -cs s -fcs 1 -k 2 -n {32|64|128|256|512}\r\u0026gt; fhhos4 -geo square -mesh cart -mesher inhouse -s mg -cycle V,0,3 -cs s -fcs 1 -k 3 -n {32|64|128|256|512}\r (b) Without face coarsening \u0026gt; fhhos4 -geo square -mesh cart -mesher inhouse -s mg -cycle V,0,3 -cs s -fcs 0 -k 0 -n {32|64|128|256|512}\r\u0026gt; fhhos4 -geo square -mesh cart -mesher inhouse -s mg -cycle V,0,3 -cs s -fcs 0 -k 1 -n {32|64|128|256|512}\r\u0026gt; fhhos4 -geo square -mesh cart -mesher inhouse -s mg -cycle V,0,3 -cs s -fcs 0 -k 2 -n {32|64|128|256|512}\r\u0026gt; fhhos4 -geo square -mesh cart -mesher inhouse -s mg -cycle V,0,3 -cs s -fcs 0 -k 3 -n {32|64|128|256|512}\r Figure 4.11 Important parameter: -cs b.\n# Custom Bey's refinement, V(0,6)\r\u0026gt; fhhos4 -geo cube -mesh tetra -mesher inhouse -k 1 -s mg -cs b -cycle V,0,6 -n {8|16|32|64}\r# Custom Bey's refinement, V(0,8)\r\u0026gt; fhhos4 -geo cube -mesh tetra -mesher inhouse -k 1 -s mg -cs b -cycle V,0,8 -n {8|16|32|64}\r# Custom Bey's refinement, V(0,10)\r\u0026gt; fhhos4 -geo cube -mesh tetra -mesher inhouse -k 1 -s mg -cs b -cycle V,0,10 -n {8|16|32|64}\r# Cartesian tet. refinement, V(0,6)\r\u0026gt; fhhos4 -geo cube -mesh stetra -mesher inhouse -k 1 -s mg -cs s -cycle V,0,6 -n {8|16|32|64}\r Figure 4.12 \u0026gt; fhhos4 -geo platewith4holes -s mg -cs b -cycle V,0,10 -k 0 -n {8|16|32} # diverges at n=32\r\u0026gt; fhhos4 -geo platewith4holes -s mg -cs b -cycle V,0,10 -k 1 -n {8|16|32}\r\u0026gt; fhhos4 -geo platewith4holes -s mg -cs b -cycle V,0,10 -k 2 -n {8|16|32}\r\u0026gt; fhhos4 -geo platewith4holes -s mg -cs b -cycle V,0,10 -k 3 -n {8|16|32}\r Figure 4.15 Important parameter: -cs r.\n\u0026gt; fhhos4 -geo squarecircle -s mg -cs r -cycle V,0,3 -k 0 -n {32|64|128|256|512|1024}\r\u0026gt; fhhos4 -geo squarecircle -s mg -cs r -cycle V,0,3 -k 1 -n {32|64|128|256|512|1024}\r\u0026gt; fhhos4 -geo squarecircle -s mg -cs r -cycle V,0,3 -k 2 -n {32|64|128|256|512}\r\u0026gt; fhhos4 -geo squarecircle -s mg -cs r -cycle V,0,3 -k 3 -n {32|64|128|256|512}\r ","date":1617235200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1617235200,"objectID":"6d1c114db3b49b3394c125949be73069","permalink":"https://pmatalon.github.io/publication/2020-mg-for-hho/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/publication/2020-mg-for-hho/","section":"publication","summary":"We consider a second order elliptic PDE discretized by the Hybrid High-Order method, for which globally coupled unknowns are located at faces. To efficiently solve the resulting linear system, we propose a geometric multigrid algorithm that keeps the degrees of freedom on the faces at every grid level. The core of the algorithm lies in the design of the prolongation operator that passes information from coarse to fine faces through the reconstruction of an intermediary polynomial of higher degree on the cells. High orders are natively handled by the use of the same polynomial degree at every grid level. The proposed algorithm requires a hierarchy of nested meshes, such that the faces (and not only the elements) are successively coarsened. Numerical tests on homogeneous and heterogeneous diffusion problems show fast convergence, scalability in the mesh size and polynomial order, and robustness with respect to heterogeneity of the diffusion coefficient.","tags":[],"title":"An h-multigrid method for Hybrid High-Order discretizations","type":"publication"},{"authors":null,"categories":null,"content":"fhhos4 (pronounce \u0026lsquo;phosphore\u0026rsquo;) stands for Fast HHO Solver for Research. It is an open-source code that solves diffusion problems with the Hybrid High-Order (HHO) discretizations.\nFeatures:\n solves diffusion problems with piecewise constant tensors HHO and DG discretizations high-order solutions handles unstructured meshes binded to the GMSH mesher implements geometric and algebraic multigrid methods exports linear systems shared-memory parallelism many parameters (various choices of polynomial bases, multigrid cycles, smoothers, coarsening strategies\u0026hellip;)  ","date":1535760000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1535760000,"objectID":"2f2f1dcdc9f1db44da78797160a8cac6","permalink":"https://pmatalon.github.io/software/fhhos4/","publishdate":"2018-09-01T00:00:00Z","relpermalink":"/software/fhhos4/","section":"software","summary":"Fast HHO solver for research","tags":null,"title":"fhhos4","type":"software"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"f26b5133c34eec1aa0a09390a36c2ade","permalink":"https://pmatalon.github.io/admin/config.yml","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/admin/config.yml","section":"","summary":"","tags":null,"title":"","type":"wowchemycms"}]